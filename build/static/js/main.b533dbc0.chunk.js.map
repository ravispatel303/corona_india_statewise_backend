{"version":3,"sources":["corona.gif","Tables.js","Footers.js","Headers.js","Scroll.js","ErrorBoundry.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Tables","props","_refreshPage","console","log","window","location","reload","getHeader","map","key","index","Button","variant","onClick","sortBy","toUpperCase","className","getRows","data","item","id","state","bind","Table","striped","bordered","hover","this","Component","Footers","Card","bg","text","Header","href","target","Body","Title","Text","Headers","Navbar","expand","Brand","src","logo","alt","Toggle","aria-controls","Collapse","Nav","Form","inline","FormControl","type","placeholder","onChange","searchChange","Scroll","style","overflowY","border","height","children","ErrorBoundry","hasError","error","info","setState","App","onSearchChange","event","searchfield","value","direction","sort","a","b","States","fetch","then","response","json","users","filteredRobots","filter","dat","toLowerCase","includes","Container","Alert","time","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.b533dbc0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/corona.a30dc93b.gif\";","import React, {Component} from 'react';\r\nimport { Button, Table } from 'react-bootstrap';\r\nimport data from './recentData.json';\r\nimport './Tables.css';\r\n\r\nclass Tables extends Component{\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tdata: data,\r\n\t\t}\r\n\t\t// this.getKeys = this.getKeys.bind(this);\r\n\t\tthis.getHeader = this.getHeader.bind(this);\r\n\t\tthis.getRows = this.getRows.bind(this);\r\n\t}\r\n\r\n  \t_refreshPage = () => {\r\n        console.log(\"Clicked\");\r\n        window.location.reload();\r\n      }\r\n\r\n\t// getKeys = () => {\r\n\t// \tif (Object.keys(this.props.data).length === 0){\r\n\t// \t\treturn ( <button onClick = {this._refreshPage()}> test </button>);\r\n\t// \t}else{\r\n\t// \t\treturn Object.keys(this.props.data[0]);\r\n\t// \t}\r\n\t// }\r\n\r\n\tgetHeader = () => {\r\n\t\t// var keys = this.getKeys();\r\n\t\tvar keys = ['States', 'Total Cases', 'New Cases', 'Total Deaths', 'New Deaths', 'Total Recovered']\r\n\t\treturn keys.map((key, index) => {\r\n\t\t\treturn <th key={key} >\r\n\t\t\t\t<Button variant=\"info\" onClick={() => this.props.sortBy(key)}>\r\n\t\t\t\t\t{key.toUpperCase()}\r\n\t\t\t\t\t<i className=\"fas fa-sort\"></i>\r\n\t\t\t\t</Button>\r\n\t\t\t</th>\r\n\t\t})\r\n\t}\r\n\r\n\tgetRows = () => {\r\n\t\tvar items = this.props.data;\r\n\t\t// var keys = this.getKeys();\r\n\t\treturn items.map((item, index) => {\r\n\t\t\treturn <tr key={item['States']} id={item['States']}>\r\n\t\t\t\t<td>{item['States']}</td>\r\n\t\t\t\t<td>{item['Total Cases']}</td>\r\n\t\t\t\t<td id='New_Cases'>{item['New Cases']}</td>\r\n\t\t\t\t<td>{item['Total Deaths']}</td>\r\n\t\t\t\t<td id='New_Deaths'>{item['New Deaths']}</td>\r\n\t\t\t\t<td id='Total_Recovered'>{item['Total Recovered']}</td>\r\n\t\t\t</tr>\t\r\n\t\t}) \r\n\t}\r\n\r\n\trender(){\r\n\t\treturn(\r\n\t\t\t<div>\r\n\t\t\t\t<Table striped bordered hover >\r\n\t\t\t\t<thead><tr>{this.getHeader()}</tr></thead>\r\n\t\t\t\t<tbody>{this.getRows()}</tbody>\r\n\t\t\t\t</Table>\r\n\t\t\t</div> \r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Tables;","import React from 'react';\r\nimport { Card } from 'react-bootstrap';\r\n\r\nconst Footers = () => {\r\n\treturn(\r\n\t<Card bg=\"dark\" variant=\"dark\" text=\"white\" className=\"text-center\">\r\n\t  <Card.Header>Sources: Dataset retrieved from <a href='https://www.mohfw.gov.in/' target='blank' className=\"text-decoration-none\">MoHFW</a></Card.Header>\r\n\t  <Card.Body>\r\n\t    <Card.Title>Developed By:</Card.Title>\r\n\t    <Card.Text>\r\n\t      <a href='https://github.com/ravispatel303/corona_india_statewise' target='blank' className=\"text-decoration-none\">Ravi Patel</a>\r\n\t    </Card.Text>\r\n\t  </Card.Body>\r\n\t</Card>\r\n\t);\r\n}\r\n\r\nexport default Footers","import React from 'react';\r\nimport { Navbar, Nav, Form, Button, FormControl, NavDropdown } from 'react-bootstrap';\r\nimport logo from './corona.gif';\r\n// import SearchBox from './SearchBox';\r\n \r\n\r\nconst Headers = (props) => {\r\n\treturn(\r\n\t\r\n        <Navbar bg=\"dark\" variant=\"dark\" expand='lg' >\r\n\t\t\t<Navbar.Brand href=\"https://coronainindia.netlify.com/\" ><p className='container-fluid'><img src={logo} alt=\"logo\"/> COVID-19 Statewise Cases in INDIA</p></Navbar.Brand>\r\n\t\t\t<Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\t\t\t\r\n\t\t\t<Navbar.Collapse id=\"basic-navbar-nav\">\r\n\t\t\t    <Nav className=\"mr-auto\"></Nav>\r\n\t\t\t\t<Form inline>\r\n\t\t\t\t  \t  \t<FormControl \r\n\t\t\t  \t\ttype=\"search\" \r\n\t\t\t  \t\tplaceholder=\"Search States\" \r\n\t\t\t  \t\tclassName=\"mr-sm-2\"\r\n\t\t\t  \t\tonChange={props.searchChange} \r\n\t\t\t  \t\t/>\t\r\n\t\t\t\t</Form>\r\n\t\t\t</Navbar.Collapse>\r\n\t\t</Navbar>\r\n\t)\r\n}\r\n\r\nexport default Headers","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n\treturn(\r\n\t\t<div style = {{overflowY: 'scroll', border: '1px solid black', height: '800px'}}>\r\n\t\t{props.children}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Scroll","import React, { Component } from 'react'\r\nimport data from './recentData.json';\r\n\r\nclass ErrorBoundry extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tdata: data,\r\n\t\t\thasError: false\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidCatch(error, info) {\r\n\t\tthis.setState({hasError: true, data: data})\r\n\t}\r\n\r\n\trender() {\r\n\t\tif (this.state.hasError) {\r\n\t\t\treturn <h1> Ooops. No such word in state names</h1>\r\n\t\t}\r\n\r\n\t\treturn this.props.children\r\n\t}\r\n}\r\n\r\n\r\nexport default ErrorBoundry;","import React, {Component, useEffect} from 'react';\nimport data from './recentData.json';\nimport { time } from './time.json';\nimport Tables from './Tables';\nimport './App.css';\nimport { Card, Navbar, Nav, Form, FormControl, Button, Container, Alert } from 'react-bootstrap';\nimport Footers from './Footers';\nimport Headers from './Headers';\nimport Scroll from './Scroll';\nimport ErrorBoundry from './ErrorBoundry';\n\nclass App extends Component{\n  constructor() {\n    super();\n    this.state = {\n      data: [],\n      searchfield: '',\n      direction: {\n        'States': 'asc',\n        'New Cases': 'asc',\n        'New Deaths': 'asc',\n        'Total Cases': 'asc',\n        'Total Deaths': 'asc'\n      }\n    }\n    this.sortBy = this.sortBy.bind(this)\n  }\n\n  componentDidMount(){\n    console.log('aaa')\n\n    fetch('/flask/data')\n    .then(response => response.json())\n    .then(users => this.setState({ data: data}))\nconsole.log('dd')\n    fetch('/flask/runner')\n    console.log('bb')\n    \n\n  }\n\n  onSearchChange = (event) => {\n    // console.log(event)\n    this.setState({ searchfield: event.target.value })\n  }\n\n  sortBy = (key) => {\n    // console.log(this.state.direction)\n    if(key === 'States'){\n      this.state.direction[key] === 'asc'\n      ?this.setState({\n        data: data.sort((a,b) => {\n            if(b.States < a.States){\n              return 1\n            }else if(a.States < b.States){\n              return -1\n            }else{\n              return 0\n            }\n          }),\n        direction:{\n          [key]: 'desc'\n        }\n      })\n      :this.setState({\n        data: data.sort((a,b) => {\n            if(b.States > a.States){\n              return 1\n            }else if(a.States > b.States){\n              return -1\n            }else{\n              return 0\n            }\n          }),\n        direction:{\n          [key]: 'asc'\n        }\n      })\n    }else{\n      this.setState({\n        data: data.sort((a,b) => (\n          this.state.direction[key] === 'asc'\n          ? a[key] - b[key]\n          : b[key] - a[key]\n        )),\n        direction: {\n          [key]: this.state.direction[key] === 'asc'\n          ? 'desc'\n          : 'asc'\n        }\n      })\n    }\n  }\n\n  render() {\n\n    const { data, searchfield } = this.state;\n    const filteredRobots = data.filter(dat => {\n      return dat.States.toLowerCase().includes(searchfield.toLowerCase())\n    })\n\n\n    return (\n    <div className=\"Jumbotron\">\n      <Headers searchChange={this.onSearchChange}/>\n      <Scroll>     \n      <Container className='py-5'>\n        <Alert key='time' variant='info'>\n    Last Updated on: { time } GMT+5:30\n  </Alert>\n      <ErrorBoundry>\n       <Tables data={filteredRobots} sortBy={this.sortBy}/>\n      </ErrorBoundry>\n      </Container>\n      </Scroll>\n      <Footers/>\n    </div>\n    );  \n  }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}